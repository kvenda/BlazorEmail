@page "/email3"
@using System.Threading.Tasks;
@using SendGrid;
@using SendGrid.Helpers.Mail;
@using BlazorApp11.Data;  <!-- added in order to access Data / EmailModel.cs // took out DataAnnotations  -->

<h3>Email 3 - Better Code to Separate EmailModel class code from page and Send Email via SendGrid</h3>

<EditForm Model="@newEmail" OnValidSubmit="@ExecuteEmail">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <InputText id="Name" placeholder="Your Name" @bind-Value="newEmail.Name" :null /><br /><br />
    <InputText id="Email" placeholder="Your Email" @bind-Value="newEmail.Email" :null /><br /><br />
    <InputText id="Subject" placeholder="Subject" @bind-Value="newEmail.Subject" :null /><br /><br />
    <InputText id="Message" placeholder="Message" @bind-Value="newEmail.Message" :null /><br /><br />
    <button type="submit" class="btn btn-primary">Send Email</button>
</EditForm>

@code {

    public EmailModel newEmail = new EmailModel();

    public async Task ExecuteEmail()   //no longer static because the values from form are dynamic
    {
        var apiKey = Environment.GetEnvironmentVariable("SENDGRID_API_KEY");
        //   var apiKey = ("NotMyRealKeyRREJLFJL.KJG.LKJ");
        var client = new SendGridClient(apiKey);
        var from = new EmailAddress("karen@enchantedfireside.com", "My SendGrid Authenticated Email");
        string subject = newEmail.Subject;
        var to = new EmailAddress(newEmail.Email);
        var plainTextContent = newEmail.Message;  // "and easy to do anywhere, even with C#";
        var htmlContent = "<strong>" + plainTextContent + " in html </strong>";
        var msg = MailHelper.CreateSingleEmail(from, to, subject, plainTextContent, htmlContent);
        var response = await client.SendEmailAsync(msg);
        newEmail = new EmailModel();
    }
}