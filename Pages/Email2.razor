@page "/email2"
@using System.Threading.Tasks;
@using SendGrid;
@using SendGrid.Helpers.Mail;
@using System.ComponentModel.DataAnnotations; <!-- added for my in-page model to have validation  -->

<h3>Email 2 - Bare Minimum Code to Use Form for Inputs and Send Email via SendGrid</h3>

<!--- <button class="btn btn-primary" @onclick="ExecuteEmail">Click to email</button>
      using the button in the form instead-->

<EditForm Model="@newEmail" OnValidSubmit="@ExecuteEmail">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <InputText id="Name" placeholder="Your Name" @bind-Value="newEmail.Name" :null /><br /><br />
    <InputText id="Email" placeholder="Your Email" @bind-Value="newEmail.Email" :null /><br /><br />
    <InputText id="Subject" placeholder="Subject" @bind-Value="newEmail.Subject" :null /><br /><br />
    <InputText id="Message" placeholder="Message" @bind-Value="newEmail.Message" :null /><br /><br />
    <button type="submit" class="btn btn-primary">Send Email</button>
</EditForm>

@code {

    public class EmailModelInPage
    {
        [Required]
        public string Name { get; set; }

        [EmailAddress]
        public string Email { get; set; }
        public string Subject { get; set; }
        public string Message { get; set; }
    }

    public EmailModelInPage newEmail = new EmailModelInPage();

    public async Task ExecuteEmail()   //no longer static because the values from form are dynamic
    {
        var apiKey = Environment.GetEnvironmentVariable("SENDGRID_API_KEY");
        //   var apiKey = ("NotMyRealKeyRREJLFJL.KJG.LKJ");
        var client = new SendGridClient(apiKey);
        var from = new EmailAddress("myemail@myauthenticatedSGaccount.com", "My SendGrid Authenticated Email");
        string subject = newEmail.Subject;
        var to = new EmailAddress(newEmail.Email);
        var plainTextContent = newEmail.Message;  // "and easy to do anywhere, even with C#";
        var htmlContent = "<strong>" + plainTextContent + " in html </strong>";
        var msg = MailHelper.CreateSingleEmail(from, to, subject, plainTextContent, htmlContent);
        var response = await client.SendEmailAsync(msg);
        newEmail = new EmailModelInPage();
    }
}
